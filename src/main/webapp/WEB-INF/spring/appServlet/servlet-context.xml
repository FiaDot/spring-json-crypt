<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans	
		http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd		
		http://www.springframework.org/schema/oxm http://www.springframework.org/schema/oxm/spring-oxm-3.1.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.1.xsd ">
		
	
	
	<!-- Import properties  -->
	<util:properties id="config_crypto" location="classpath:crypto-properties.xml" />
		
	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model 
	<mvc:annotation-driven />
-->

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<mvc:resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/views/" />
		<property name="suffix" value=".jsp" />
	</bean>
	
	<context:component-scan base-package="com.fiadot.springjsoncrypt" />
	
	
	
	
	<!-- Crypt -->
	<bean id="cryptoUtil" class="com.fiadot.springjsoncrypt.util.CipherUtils" scope="prototype">
		<constructor-arg name="keyAlgorithm" value="#{config_crypto['crypto.key.algorithm']}"/>
		<constructor-arg name="cipherAlgorithm" value="#{config_crypto['crypto.cipher.argorithm']}"/>
		<constructor-arg name="keyString" value="#{config_crypto['crypto.key']}"/>
		<constructor-arg name="initialVector" value="#{config_crypto['crypto.initial.vector']}"/>	
	</bean>
	
	
	<bean id="encJsonUnMarshaller" class="com.fiadot.springjsoncrypt.json.JsonDecryptUnMashaller">
 		<property name="mode" value="1001" />  
		<property name="streamDriver">
			<bean class="com.thoughtworks.xstream.io.json.JettisonMappedXmlDriver" />
		</property>
		<property name="autodetectAnnotations" value="true" />
  
  		<property name="annotatedClasses">
            <list>
                <value>com.fiadot.springjsoncrypt.ReqDto</value>
                <value>com.fiadot.springjsoncrypt.ResDto</value>
            </list>
        </property>
        
 		<property name="keyAlgorithm" value="#{config_crypto['crypto.key.algorithm']}"/>
		<property name="cipherAlgorithm" value="#{config_crypto['crypto.cipher.argorithm']}"/>
		<property name="keyString" value="#{config_crypto['crypto.key']}"/>
		<property name="initialVector" value="#{config_crypto['crypto.initial.vector']}"/>			
	</bean>
	
	
	
	<bean id="JsonXstream" class="com.thoughtworks.xstream.XStream">
		<constructor-arg name="hierarchicalStreamDriver">
			<bean class="com.fiadot.springjsoncrypt.json.JsonMarshallerDriver" />
		</constructor-arg>
	</bean>
	
	<bean id="encJsonMarshaller" class="com.fiadot.springjsoncrypt.json.JsonEncryptMashaller">
 		<property name="mode" value="1001" /> 
		<property name="streamDriver">
			<bean class="com.fiadot.springjsoncrypt.json.JsonMarshallerDriver" />
		</property>
		<property name="xStream" ref="JsonXstream"/>
		<property name="autodetectAnnotations" value="true" />
	
        
		<property name="keyAlgorithm" value="#{config_crypto['crypto.key.algorithm']}"/>
		<property name="cipherAlgorithm" value="#{config_crypto['crypto.cipher.argorithm']}"/>
		<property name="keyString" value="#{config_crypto['crypto.key']}"/>
		<property name="initialVector" value="#{config_crypto['crypto.initial.vector']}"/>			
		
	</bean>
	

	<!-- JSON ext  -->
	<bean id="jsonextConverter" class="org.springframework.http.converter.xml.MarshallingHttpMessageConverter">
		<property name="supportedMediaTypes" >
			<list>
				<value>application/jsonext</value>
			</list>
		</property>
		<property name="marshaller" ref="encJsonMarshaller" />
		<property name="unmarshaller" ref="encJsonUnMarshaller" />
	</bean>
		


	<bean id="conversion-service" class="org.springframework.format.support.FormattingConversionServiceFactoryBean" />
 	
	<bean class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping">
		<property name="order" value="1" />
		<property name="alwaysUseFullPath" value="true" />
	</bean>
		
		
		
	<bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		
		<property name="alwaysUseFullPath" value="true" />
		
		<property name="webBindingInitializer">			
			<bean class="org.springframework.web.bind.support.ConfigurableWebBindingInitializer">
				<property name="conversionService" ref="conversion-service" />				
			</bean>
		</property>

		<property name="messageConverters">
			<list>									 		
				<ref bean="jsonextConverter" />			
					
				<bean class="org.springframework.http.converter.StringHttpMessageConverter">
					<property name="writeAcceptCharset" value="false" />
				</bean>
											
			</list>
		</property>
	</bean>
	
	
</beans>
